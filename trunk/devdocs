<?php
/*
Copyright 2011 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

See the source code here:
     http://code.google.com/p/jdrop/
*/

require_once("inc/ui.inc");
require_once("inc/auth.inc");
require_once("inc/utils.inc");
require_once("inc/db.inc");

ui_head("Documentation");
?>

<p>
It's not hard, but it takes a few steps to make a bookmarklet work with Jdrop.
</p>

<p>
The easiest way to start is to embed the contents of <a href="jdrop-example.js">jdrop-example.js</a> in your bookmarklet script.
Here's the code with some explanation:
</p>

<div style="margin-left: 40px;">
<pre class=scrollcode>
<?php
echo file_get_contents("jdrop-example.js");
?>
</pre>
</div>

<style>
#steps { margin-bottom: 10px; list-style-position: outside; margin-left: 20px; }
#steps LI { margin-top: 10px; }
</style>
<ol id=steps>
  <li> <strong>SaveToJdrop</strong>
<div>
Typically bookmarklets do two things: gather data and display data.
Package up that data in a single object and pass it to <code>SaveToJdrop</code> along with the name of your bookmarklet and a version number.
(This <code>appname</code> is the one you used to register your app as described later.)
Although optional, it's a good practice to specify a version number associated with the JSON format being saved.
That way, your rendering code can be backward compatible if the JSON format changes.
The <code>version</code> param is just a string, for example, <code>1.1.3</code>.
</div>

  <li> <strong>JdropCallback</strong>
<div>
Write a callback function that takes your data object and displays it in an empty page.
This function will be used in the <a href="view">Jdrop view page</a>.
</div>

  <li> <strong>is JDROPVIEW defined?</strong>
<div>
When your bookmarklet code is used in the <a href="view">Jdrop view page</a> to render the data,
you don't want the bookmarklet analysis code to run.
That's accomplished by only doing the bookmarklet analysis if <code>JDROPVIEW</code> is undefined.
</div>

  <li> <strong>JSON</strong>
<div>
Include a definition of JSON for browsers that don't have it. I minify the code from
<a href="http://www.json.org/js.html">json2.js</a> and inline that in my bookmarklet.
</div>
</ol>


<p>
In addition to these steps accomplished through using <a href="jdrop-example.js">jdrop-example.js</a>,
you also have to add a "Save to Jdrop" link to your bookmarklet that calls your function.
Something like this:
</p>
<div style="margin-left: 40px;">
<pre class=scrollcode>
&lt;a href="javascript:SaveToJdrop('MY APP NAME', myDataObj, '1.1.3', '1.8 secs')"&gt;Save to Jdrop&lt;/a&gt;
</pre>
</div>

<a name="appregister"></a>
<h2>App Register</h2>
<p>
The final step is to register your app.
Once Jdrop is well established that'll be a self-service process.
But for now now the only way to register your app is by posting a request to the
<a href="http://groups.google.com/group/jdrop/topics">Jdrop discussion list</a>.
Typically I'll get back to you within a few hours.
</p>

<p style="margin-bottom: 0;">
This is the information needed to register your app:
</p>

<dl style="margin-top: 0;">
  <dt> App Name (required)
  <dd> The name of your app or bookmarklet.
<div class=example>
example: Docsource
</div>

  <dt> Script URL (required)
  <dd> The URL to your bookmarklet script.
<div class=example>
example: http://stevesouders.com/mobileperf/docsource.js
</div>

  <dt> Callback Function (optional)
  <dd> The JavaScript function in your script that Jdrop calls to render the JSON object (see above).
If not specified a simple JSON viewer is used.
<div class=example>
example: JdropCallback
</div>

  <dt> Format (optional)
  <dd> If your data is in a standard format (such as HTML or HAR), this is the name of that format.
By default the entire JSON string is assumed to comprise the desired formatted output.
Alternatively, the Format Key can be used to extract a key from the JSON object to be used as that formatted output.
<div class=example>
example: HAR
</div>

  <dt> Format Key (optional)
  <dd> The key in your JSON object that stores the formatted output for the specified Format.
If not specified, the entire JSON string is assumed to comprise the formatted output.
<div class=example>
example: haroutput
</div>
</dl>


<?php ui_foot(); ?>